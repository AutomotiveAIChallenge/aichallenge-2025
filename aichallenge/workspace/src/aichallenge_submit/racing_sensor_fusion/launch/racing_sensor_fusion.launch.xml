<!-- ==========================================================
     カートレース用改良センサーフュージョンlaunchファイル
     お台場カート場 36秒→33秒台達成を目指すシステム
     ========================================================== -->
<launch>
  <arg name="use_sim_time" default="false"/>
  
  <!-- ==========================================================
       改良版センサーフュージョンシステム
       ========================================================== -->
  <group>
    <push-ros-namespace namespace="localization"/>
    
    <!-- 改良版センサーフュージョンnode -->
    <node pkg="racing_sensor_fusion" exec="racing_sensor_fusion_node" 
          name="racing_sensor_fusion" output="screen">
      
      <!-- パラメータファイル読み込み -->
      <param from="$(find-pkg-share racing_sensor_fusion)/config/racing_sensor_fusion.yaml"/>
      
      <!-- リマップ設定（既存システムとの接続） -->
      <remap from="/sensing/gnss/pose_with_covariance" 
             to="/sensing/gnss/pose_with_covariance"/>
      <remap from="/sensing/imu/imu_data" 
             to="/sensing/imu/imu_data"/>
      <remap from="/sensing/vehicle_velocity_converter/twist_with_covariance" 
             to="/sensing/vehicle_velocity_converter/twist_with_covariance"/>
      
      <!-- 出力トピック -->
      <!-- このトピックを既存のEKFローカライザーが使用 -->
      <remap from="/localization/racing_sensor_fusion/pose_with_covariance" 
             to="/localization/racing_sensor_fusion/pose_with_covariance"/>
    </node>
    
    <!-- ==========================================================
         既存システムとの統合
         ========================================================== -->
    
    <!-- 従来のimu_gnss_poser_nodeは無効化 -->
    <!-- <node pkg="imu_gnss_poser" exec="imu_gnss_poser_node" name="imu_gnss_poser" output="screen"/> -->
    
    <!-- EKFローカライザー（改良版センサーフュージョンの出力を使用） -->
    <include file="$(find-pkg-share ekf_localizer)/launch/ekf_localizer.launch.xml">
      <!-- カートレース用高速設定 -->
      <arg name="enable_yaw_bias_estimation" value="true"/>
      <arg name="tf_rate" value="50.0"/>                <!-- 高速更新 -->
      <arg name="twist_smoothing_steps" value="2"/>      <!-- 適度な平滑化 -->
      <arg name="pose_smoothing_steps" value="2"/>       <!-- 適度な平滑化 -->
      
      <!-- 改良版センサーフュージョンからの入力 -->
      <arg name="pose_frame_id" value="base_link"/>
      
      <!-- カートレース用共分散設定 -->
      <arg name="pose_additional_delay" value="0.05"/>    <!-- 低遅延設定 */
      <arg name="twist_additional_delay" value="0.03"/>   <!-- 低遅延設定 -->
    </include>
    
    <!-- ジャイロオドメーター（改良IMUデータ使用） -->
    <include file="$(find-pkg-share gyro_odometer)/launch/gyro_odometer.launch.xml">
      <arg name="input_vehicle_twist_with_covariance_topic" 
           value="/sensing/vehicle_velocity_converter/twist_with_covariance"/>
      <arg name="input_imu_topic" 
           value="/sensing/imu/imu_data"/>
      <arg name="output_twist_with_covariance_topic" 
           value="/localization/twist_estimator/twist_with_covariance"/>
      <arg name="output_twist_with_covariance_raw_topic" 
           value="/localization/twist_estimator/twist_with_covariance_raw"/>
    </include>
  </group>

  <!-- ==========================================================
       センサー前処理システム（既存）
       ========================================================== -->
  <group>
    <push-ros-namespace namespace="sensing"/>
    
    <!-- 車両速度変換器 -->
    <include file="$(find-pkg-share vehicle_velocity_converter)/launch/vehicle_velocity_converter.launch.xml">
      <arg name="input_vehicle_velocity_topic" value="/vehicle/status/velocity_status"/>
      <arg name="output_twist_with_covariance" value="/sensing/vehicle_velocity_converter/twist_with_covariance"/>
      <arg name="config_file" value="$(find-pkg-share aichallenge_submit_launch)/config/vehicle_velocity_converter.param.yaml"/>
    </include>
    
    <!-- IMU前処理（改良版使用） -->
    <group>
      <push-ros-namespace namespace="imu"/>
      
      <!-- 基本IMU補正 -->
      <include file="$(find-pkg-share imu_corrector)/launch/imu_corrector.launch.xml">
        <arg name="input_topic" value="imu_raw"/>
        <arg name="output_topic" value="imu_corrected"/>
        <arg name="param_file" value="$(find-pkg-share imu_corrector)/config/imu_corrector.param.yaml"/>
      </include>
      
      <!-- 改良IMUフィルター（既存システム使用） -->
      <include file="$(find-pkg-share imu_advanced_filter)/launch/imu_advanced_filter.launch.xml">
        <arg name="input_topic" value="/sensing/imu/imu_corrected"/>
        <arg name="output_topic" value="/sensing/imu/imu_data"/>
        
        <!-- カートレース最適化パラメータ -->
        <arg name="enable_drift_compensation" value="true"/>
        <arg name="enable_vibration_filtering" value="true"/>
        <arg name="drift_compensation_gain" value="0.025"/>
        <arg name="lowpass_cutoff_frequency" value="12.0"/>
        <arg name="vibration_detection_threshold" value="0.6"/>
        <arg name="debug_output" value="false"/>
      </include>
    </group>
    
    <!-- GNSS処理（従来システム使用） -->
    <group>
      <push-ros-namespace namespace="gnss"/>
      <include file="$(find-pkg-share racing_kart_gnss_poser)/launch/gnss_poser.launch.xml">
        <arg name="input_topic_fix" value="nav_sat_fix"/>
        <arg name="output_topic_gnss_pose" value="pose"/>
        <arg name="output_topic_gnss_fixed" value="gnss_fixed"/>
        <arg name="output_topic_gnss_pose_cov" value="pose_with_covariance"/>
      </include>
    </group>
  </group>

  <!-- ==========================================================
       制御システム（改良位置推定を活用）
       ========================================================== -->
  <!-- Pure Pursuit制御（改良されたローカライゼーションを使用） -->
  <node pkg="simple_pure_pursuit" exec="simple_pure_pursuit" 
        name="simple_pure_pursuit_node" output="screen">
    
    <!-- カートレース用チューニングパラメータ -->
    <param name="use_external_target_vel" value="false"/>
    <param name="external_target_vel" value="12.0"/>     <!-- 目標速度 -->
    
    <!-- 33秒台達成用パラメータ調整 -->
    <param name="lookahead_gain" value="0.9"/>           <!-- 先読み距離ゲイン -->
    <param name="lookahead_min_distance" value="2.5"/>   <!-- 最小先読み距離 -->
    <param name="speed_proportional_gain" value="1.2"/>  <!-- 速度比例ゲイン -->
    
    <!-- 改良されたローカライゼーション結果を使用 -->
    <remap from="input/kinematics" to="/localization/kinematic_state"/>
    <remap from="input/trajectory" to="/planning/scenario_planning/trajectory"/>
    <remap from="output/control_cmd" to="/control/command/control_cmd"/>
  </node>

  <!-- ==========================================================
       診断・監視システム
       ========================================================== -->
  <!-- センサーフュージョン診断ツール -->
  <node pkg="racing_sensor_fusion" exec="fusion_diagnostic_tool" 
        name="fusion_diagnostics" output="screen">
    
    <!-- 診断間隔設定 -->
    <param name="diagnostic_interval" value="5.0"/>      <!-- 5秒間隔で診断実行 -->
    <param name="enable_realtime_monitoring" value="true"/>
    
    <!-- 監視対象トピック -->
    <param name="monitor_topics" value="[
      '/sensing/gnss/pose_with_covariance',
      '/sensing/imu/imu_data', 
      '/localization/racing_sensor_fusion/pose_with_covariance'
    ]"/>
  </node>

  <!-- ==========================================================
       パフォーマンス監視
       ========================================================== -->
  <!-- システム性能監視node -->
  <node pkg="racing_sensor_fusion" exec="performance_monitor" 
        name="performance_monitor" output="screen">
    
    <!-- ラップタイム計測設定 -->
    <param name="enable_lap_timing" value="true"/>
    <param name="target_lap_time" value="33.0"/>         <!-- 目標ラップタイム33秒 -->
    <param name="start_finish_coordinates" value="[0.0, 0.0]"/>  <!-- スタート/フィニッシュライン座標 -->
    
    <!-- パフォーマンス分析 -->
    <param name="analyze_sector_times" value="true"/>
    <param name="log_performance_data" value="true"/>
    
    <!-- 33秒台達成のための最適化提案機能 -->
    <param name="suggest_optimizations" value="true"/>
  </node>

</launch>

<!-- ==========================================================
     使用方法とチューニングガイド
     ========================================================== -->
<!--
【システム起動方法】
1. 基本起動：
   ros2 launch racing_sensor_fusion racing_sensor_fusion.launch.xml

2. シミュレーション環境での起動：
   ros2 launch racing_sensor_fusion racing_sensor_fusion.launch.xml use_sim_time:=true

【33秒台達成のためのチューニング手順】
1. 基本動作確認：
   - 全センサーの信号受信確認
   - センサーフュージョン動作確認
   - 制御応答確認

2. パラメータ調整：
   config/racing_sensor_fusion.yamlを編集
   - update_frequencyを50→60Hzに段階的調整
   - 速度しきい値を実走行データに基づいて調整
   - センサー重みをコース特性に合わせて微調整

3. 制御パラメータ最適化：
   - lookahead_gainを0.9→1.0に調整
   - speed_proportional_gainを1.2→1.3に調整
   
4. 性能監視：
   - performance_monitorの出力でラップタイム監視
   - セクタータイム分析で改善点特定
   - 最適化提案機能の活用

【トラブルシューティング】
- センサー信号が途切れる場合：timeout値を調整
- 制御が不安定な場合：平滑化パラメータを調整
- レイテンシが高い場合：update_frequencyを下げる

【推奨監視コマンド】
# リアルタイムでセンサー状況確認
ros2 topic hz /localization/racing_sensor_fusion/pose_with_covariance

# パフォーマンス監視
ros2 topic echo /performance_monitor/lap_times

# センサーフュージョン診断
ros2 service call /fusion_diagnostics/run_diagnosis std_srvs/srv/Empty
-->
